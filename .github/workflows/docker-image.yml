name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push 1
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: helpys/jena-fuseki:latest

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    # only runs when changes are made to the master branch
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo FUSEKI_PASSWORD=${{ secrets.FUSEKI_PASSWORD }} >> .env

      - name: Add the private SSH key to the ssh-agent of the build environment
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

      - name: Create subdir 'app' if it does not exists
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} mkdir -p /app

      - name: Copy docker-compose.prod.yml and test file to DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app
          scp  -o StrictHostKeyChecking=no -r ./.env ./testutil.sh root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Remove all Docker images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /app
            source .env
            docker stop $(docker ps -a -q);
            docker rm $(docker ps -a -q);
            docker volume rm $(docker volume ls -q);
            docker rmi $(docker images -a -q);
            docker pull helpys/jena-fuseki
            docker run -d -p 3030:3030 -e ADMIN_PASSWORD=$FUSEKI_PASSWORD helpys/jena-fuseki
          ENDSSH

      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /app
            source .env
            docker stop $(docker ps -a -q);
            docker pull helpys/jena-fuseki
            docker run -d -p 3030:3030 -e ADMIN_PASSWORD=$FUSEKI_PASSWORD helpys/jena-fuseki
          ENDSSH

  test:
    name: Test the deployment
    runs-on: ubuntu-latest
    needs: deploy
    # only runs when changes are made to the master branch
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo FUSEKI_PASSWORD=${{ secrets.FUSEKI_PASSWORD }} >> .env
          echo DIGITAL_OCEAN_IP_ADDRESS=${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} >> .env

      - name: Add the private SSH key to the ssh-agent of the build environment
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

      - name: Create datasets
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          curl -s 'http://46.101.206.42:3030/$/datasets' -H "Authorization: Basic $(echo -n admin:alain | base64)" -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' --data "dbName=example&dbType=tdb"

      - name: Test jena-fuseki usind SOH
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /app
            source .env
            ./testutil.sh
          ENDSSH
